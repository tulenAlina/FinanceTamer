import Foundation

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
final class CategoriesService {
    var mockCategories: [Category] = [
        Category(id: 1, name: "–ó–∞—Ä–ø–ª–∞—Ç–∞", emoji: "üí∞", direction: .income),
        Category(id: 2, name: "–ü–æ–¥–∞—Ä–æ–∫", emoji: "üéÅ", direction: .income),
        Category(id: 3, name: "–ü—Ä–æ–¥—É–∫—Ç—ã", emoji: "üõí", direction: .outcome),
        Category(id: 4, name: "–ö–∞—Ñ–µ", emoji: "‚òïÔ∏è", direction: .outcome),
        Category(id: 5, name: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", emoji: "üöï", direction: .outcome),
        Category(id: 6, name: "–ñ–∏–ª—å—ë", emoji: "üè†", direction: .outcome),
        Category(id: 7, name: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", emoji: "üé≠", direction: .outcome)
    ]
    
    /// –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    func categories() async throws -> [Category] {
        try await Task.sleep(nanoseconds: 500_000_000) // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
        return mockCategories
    }
    
    /// –ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    func categories(for direction: Direction) async throws -> [Category] {
        try await Task.sleep(nanoseconds: 500_000_000) // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
        return mockCategories.filter { $0.direction == direction }
    }
}
